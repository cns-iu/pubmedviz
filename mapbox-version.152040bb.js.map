{"version":3,"sources":["index.js"],"names":["blankStyle","map","mapboxgl","Map","container","style","center","zoom","renderWorldCopies","addPopupOnClick","layer","field","on","e","description","features","properties","Popup","setLngLat","lngLat","setHTML","addTo","getCanvas","cursor","addLayer","clusterData","clusterBoundaryData","edgeData","nodeData"],"mappings":";;;;;;;;;AAqJC,aApJD,IAAA,EAAA,EAAA,QAAA,gCACA,EAAA,EAAA,QAAA,yCACA,EAAA,EAAA,QAAA,8BACA,EAAA,EAAA,QAAA,8BAiJC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA/ID,IAAIA,EAAa,CACJ,QAAA,EACH,KAAA,QACE,OAAA,CACR,EACA,GAEM,KAAA,EACG,QAAA,GACD,OAAA,uFACA,OAAA,4FACA,OAAA,CACR,CACQ,GAAA,aACE,KAAA,aACC,MAAA,CACa,mBAAA,yBAIpB,GAAA,SAIJC,EAAM,IAAIC,SAASC,IAAI,CACvBC,UAAW,MACXC,MAAOL,EACPM,OAAQ,EAAE,EAAG,GACbC,KAAM,EACNC,mBAAmB,IA8FvB,SAASC,EAAgBR,EAAKS,EAAOC,GAGnCV,EAAIW,GAAG,QAASF,EAAO,SAAUG,GAC3BC,IAAAA,EAAcD,EAAEE,SAAS,GAAGC,WAAWL,IACvCT,IAAAA,SAASe,OACVC,UAAUL,EAAEM,QACZC,QAAQN,GACRO,MAAMpB,KAIXA,EAAIW,GAAG,aAAcF,EAAO,WAC1BT,EAAIqB,YAAYjB,MAAMkB,OAAS,YAIjCtB,EAAIW,GAAG,aAAcF,EAAO,WAC1BT,EAAIqB,YAAYjB,MAAMkB,OAAS,KA7GnCtB,EAAIW,GAAG,OAAQ,WACXX,EAAIuB,SAAS,CACL,GAAA,UACE,KAAA,OACE,OAAA,CAAU,KAAA,UAAmBC,KAAAA,EAAAA,SAC7B,OAAA,GACD,MAAA,CACO,aAAA,CAAC,MAAO,QACN,eAAA,GACM,qBAAA,CAAC,MAAO,aAIlCxB,EAAIuB,SAAS,CACL,GAAA,mBACE,KAAA,OACG,QAAA,EACD,OAAA,CAAU,KAAA,UAAmBE,KAAAA,EAAAA,SAC7B,OAAA,GACD,MAAA,CACO,aAAA,CAAC,MAAO,UACR,aAAA,GACE,eAAA,MAIpBzB,EAAIuB,SAAS,CACL,GAAA,QACE,KAAA,OACG,QAAA,EACD,OAAA,CAAU,KAAA,UAAmBG,KAAAA,EAAAA,SAC7B,OAAA,GACD,MAAA,CACO,aAAA,CAAC,MAAO,UACR,aAAA,EACE,eAAA,MAIpB1B,EAAIuB,SAAS,CACL,GAAA,QACE,KAAA,SACG,QAAA,EACD,OAAA,CAAU,KAAA,UAAmBI,KAAAA,EAAAA,SAC7B,OAAA,GACD,MAAA,CACS,eAAA,QACC,gBAAA,KAIrB3B,EAAIuB,SAAS,CACL,GAAA,iBACE,KAAA,SACG,QAAA,EACD,OAAA,CAAU,KAAA,UAAmBC,KAAAA,EAAAA,SAC7B,OAAA,CACM,aAAA,UACD,YAAA,CACX,kBAEgB,iBAAA,EACL,YAAA,GACE,cAAA,SACO,qBAAA,GAEf,MAAA,KAGXxB,EAAIuB,SAAS,CACL,GAAA,cACE,KAAA,SACG,QAAA,EACD,OAAA,CAAU,KAAA,UAAmBI,KAAAA,EAAAA,SAC7B,OAAA,CACM,aAAA,UACD,YAAA,CACX,kBAEgB,iBAAA,EACL,YAAA,GACE,cAAA,OACO,qBAAA,GAEf,MAAA,KAGXnB,EAAgBR,EAAK,QAAS,SAC9BQ,EAAgBR,EAAK,QAAS","file":"mapbox-version.152040bb.js","sourceRoot":"../map/mapbox-version","sourcesContent":["/* jshint esversion: 6 */\nimport clusterData from '../map-data/cluster.geojson';\nimport clusterBoundaryData from '../map-data/cluster_boundary.geojson';\nimport edgeData from '../map-data/edges.geojson';\nimport nodeData from '../map-data/nodes.geojson';\n\nvar blankStyle = {\n  \"version\": 8,\n  \"name\": \"Blank\",\n  \"center\": [\n    0,\n    0\n  ],\n  \"zoom\": 0,\n  \"sources\": {},\n  \"sprite\": \"https://cdn.jsdelivr.net/gh/lukasmartinelli/osm-liberty@gh-pages/sprites/osm-liberty\",\n  \"glyphs\": \"https://cdn.jsdelivr.net/gh/orangemug/font-glyphs@gh-pages/glyphs/{fontstack}/{range}.pbf\",\n  \"layers\": [\n    {\n      \"id\": \"background\",\n      \"type\": \"background\",\n      \"paint\": {\n        \"background-color\": \"rgba(255,255,255,1)\"\n      }\n    }\n  ],\n  \"id\": \"blank\"\n};\n\n// mapboxgl.accessToken = 'pk.eyJ1IjoiYmhlcnIyIiwiYSI6ImNqdm1wcmlhaTFmem80OGw2d3I3a2tnZGsifQ.ALfxSV65d_YJTGH5sVO4UA';\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: blankStyle,\n    center: [-0, 0],\n    zoom: 1,\n    renderWorldCopies: false\n});\n\nmap.on('load', function () {\n    map.addLayer({\n      \"id\": \"cluster\",\n      \"type\": \"fill\",\n      \"source\": { \"type\": \"geojson\", \"data\": clusterData },\n      \"layout\": { },\n      \"paint\": {\n        \"fill-color\": ['get', 'fill'],\n        \"fill-opacity\": 0.7,\n        \"fill-outline-color\": ['get', 'stroke'],\n      },\n    });\n\n    map.addLayer({\n      \"id\": \"cluster_boundary\",\n      \"type\": \"line\",\n      \"minzoom\": 3,\n      \"source\": { \"type\": \"geojson\", \"data\": clusterBoundaryData },\n      \"layout\": { },\n      \"paint\": {\n        \"line-color\": ['get', 'stroke'],\n        \"line-width\": 0.5,\n        \"line-opacity\": 0.8\n      },\n    });\n\n    map.addLayer({\n      \"id\": \"edges\",\n      \"type\": \"line\",\n      \"minzoom\": 4,\n      \"source\": { \"type\": \"geojson\", \"data\": edgeData },\n      \"layout\": { },\n      \"paint\": { \n        \"line-color\": ['get', 'stroke'],\n        \"line-width\": 1,\n        \"line-opacity\": 0.9\n      },\n    });\n\n    map.addLayer({\n      \"id\": \"nodes\",\n      \"type\": \"circle\",\n      \"minzoom\": 6,\n      \"source\": { \"type\": \"geojson\", \"data\": nodeData },\n      \"layout\": { },\n      \"paint\": {\n        \"circle-color\": \"black\",\n        \"circle-radius\": 3\n      },\n    });\n\n    map.addLayer({\n      \"id\": \"cluster-labels\",\n      \"type\": \"symbol\",\n      \"minzoom\": 2,\n      \"source\": { \"type\": \"geojson\", \"data\": clusterData },\n      \"layout\": {\n        \"text-field\": \"{label}\",\n        \"text-font\": [\n          \"Roboto Regular\"\n        ],\n        \"text-max-width\": 5,\n        \"text-size\": 12,\n        \"text-anchor\": \"center\",\n        \"text-radial-offset\": 1\n      },\n      \"paint\": { },\n    });\n\n    map.addLayer({\n      \"id\": \"node-labels\",\n      \"type\": \"symbol\",\n      \"minzoom\": 7,\n      \"source\": { \"type\": \"geojson\", \"data\": nodeData },\n      \"layout\": {\n        \"text-field\": \"{label}\",\n        \"text-font\": [\n          \"Roboto Regular\"\n        ],\n        \"text-max-width\": 5,\n        \"text-size\": 12,\n        \"text-anchor\": \"left\",\n        \"text-radial-offset\": 1\n      },\n      \"paint\": { },\n    });\n\n    addPopupOnClick(map, 'nodes', 'label');\n    addPopupOnClick(map, 'edges', 'label');\n});\n\nfunction addPopupOnClick(map, layer, field) {\n  // When a click event occurs on a feature in the places layer, open a popup at the\n  // location of the feature, with description HTML from its properties.\n  map.on('click', layer, function (e) {\n    let description = e.features[0].properties[field];\n    new mapboxgl.Popup()\n      .setLngLat(e.lngLat)\n      .setHTML(description)\n      .addTo(map);\n  });\n  \n  // Change the cursor to a pointer when the mouse is over the places layer.\n  map.on('mouseenter', layer, function () {\n    map.getCanvas().style.cursor = 'pointer';\n  });\n  \n  // Change it back to a pointer when it leaves.\n  map.on('mouseleave', layer, function () {\n    map.getCanvas().style.cursor = '';\n  });\n}"]}